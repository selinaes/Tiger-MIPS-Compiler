
state 0:

	program : . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 11
	program	goto 156
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 1:

	lvalue : fieldLvalue .  (reduce by rule 52)
	subscriptLvalue : fieldLvalue . LBRACK exp RBRACK 
	fieldLvalue : fieldLvalue . DOT ID 

	LBRACK	shift 24
	DOT	shift 23


	.	reduce by rule 52


state 2:

	lvalue : subscriptLvalue .  (reduce by rule 51)
	subscriptLvalue : subscriptLvalue . LBRACK exp RBRACK 
	fieldLvalue : subscriptLvalue . DOT ID 

	LBRACK	shift 26
	DOT	shift 25


	.	reduce by rule 51


state 3:

	exp : comparison .  (reduce by rule 7)



	.	reduce by rule 7


state 4:

	exp : recordCreation .  (reduce by rule 19)



	.	reduce by rule 19


state 5:

	exp : booleanExp .  (reduce by rule 6)



	.	reduce by rule 6


state 6:

	exp : functionCall .  (reduce by rule 8)



	.	reduce by rule 8


state 7:

	exp : arrayCreation .  (reduce by rule 18)



	.	reduce by rule 18


state 8:

	exp : assignment .  (reduce by rule 9)



	.	reduce by rule 9


state 9:

	exp : lvalue .  (reduce by rule 4)
	assignment : lvalue . ASSIGN exp 

	ASSIGN	shift 27


	.	reduce by rule 4


state 10:

	exp : arithmeticExp .  (reduce by rule 5)



	.	reduce by rule 5


state 11:

	program : exp .  (reduce by rule 0)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 0


state 12:

	exp : NIL .  (reduce by rule 3)



	.	reduce by rule 3


state 13:

	exp : BREAK .  (reduce by rule 14)



	.	reduce by rule 14


state 14:

	exp : LET . decs IN expseq END 

	FUNCTION	shift 47
	VAR	shift 46
	TYPE	shift 45

	fundec	goto 44
	vardec	goto 43
	tydec	goto 42
	dec	goto 41
	decs	goto 40

	.	error


state 15:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 48


	.	error


state 16:

	exp : WHILE . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 49
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 17:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 50
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 18:

	arithmeticExp : MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 51
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 19:

	exp : LPAREN . expseq RPAREN 
	exp : LPAREN . RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	RPAREN	shift 54
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 53
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	expseq	goto 52
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 20:

	exp : STRING .  (reduce by rule 2)



	.	reduce by rule 2


state 21:

	exp : INT .  (reduce by rule 1)



	.	reduce by rule 1


state 22:

	lvalue : ID .  (reduce by rule 50)
	arrayCreation : ID . LBRACK exp RBRACK OF exp 
	functionCall : ID . LPAREN RPAREN 
	functionCall : ID . LPAREN funargs RPAREN 
	recordCreation : ID . LBRACE recflds RBRACE 
	recordCreation : ID . LBRACE RBRACE 
	subscriptLvalue : ID . LBRACK exp RBRACK 
	fieldLvalue : ID . DOT ID 

	LPAREN	shift 58
	LBRACK	shift 57
	LBRACE	shift 56
	DOT	shift 55


	.	reduce by rule 50


state 23:

	fieldLvalue : fieldLvalue DOT . ID 

	ID	shift 59


	.	error


state 24:

	subscriptLvalue : fieldLvalue LBRACK . exp RBRACK 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 60
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 25:

	fieldLvalue : subscriptLvalue DOT . ID 

	ID	shift 61


	.	error


state 26:

	subscriptLvalue : subscriptLvalue LBRACK . exp RBRACK 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 62
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 27:

	assignment : lvalue ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 63
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 28:

	booleanExp : exp OR . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 64
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 29:

	booleanExp : exp AND . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 65
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 30:

	comparison : exp GE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 66
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 31:

	comparison : exp GT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 67
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 32:

	comparison : exp LE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 68
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 33:

	comparison : exp LT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 69
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 34:

	comparison : exp NEQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 70
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 35:

	comparison : exp EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 71
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 36:

	arithmeticExp : exp DIVIDE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 72
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 37:

	arithmeticExp : exp TIMES . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 73
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 38:

	arithmeticExp : exp MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 74
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 39:

	arithmeticExp : exp PLUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 75
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 40:

	exp : LET decs . IN expseq END 
	decs : decs . dec 

	IN	shift 77
	FUNCTION	shift 47
	VAR	shift 46
	TYPE	shift 45

	fundec	goto 44
	vardec	goto 43
	tydec	goto 42
	dec	goto 76

	.	error


state 41:

	decs : dec .  (reduce by rule 28)



	.	reduce by rule 28


state 42:

	dec : tydec .  (reduce by rule 32)



	.	reduce by rule 32


state 43:

	dec : vardec .  (reduce by rule 33)



	.	reduce by rule 33


state 44:

	dec : fundec .  (reduce by rule 34)



	.	reduce by rule 34


state 45:

	tydec : TYPE . ID EQ ty 

	ID	shift 78


	.	error


state 46:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 79


	.	error


state 47:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION . ID LPAREN RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN RPAREN COLON ID EQ exp 

	ID	shift 80


	.	error


state 48:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 81


	.	error


state 49:

	exp : WHILE exp . DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	DO	shift 82


	.	error


state 50:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	THEN	shift 83


	.	error


state 51:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arithmeticExp : MINUS exp .  (reduce by rule 71)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 71


state 52:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 84


	.	error


state 53:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	expseq : exp . SEMICOLON expseq 
	expseq : exp .  (reduce by rule 31)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	SEMICOLON	shift 85
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 31


state 54:

	exp : LPAREN RPAREN .  (reduce by rule 17)



	.	reduce by rule 17


state 55:

	fieldLvalue : ID DOT . ID 

	ID	shift 86


	.	error


state 56:

	recordCreation : ID LBRACE . recflds RBRACE 
	recordCreation : ID LBRACE . RBRACE 

	ID	shift 89
	RBRACE	shift 88

	recflds	goto 87

	.	error


state 57:

	arrayCreation : ID LBRACK . exp RBRACK OF exp 
	subscriptLvalue : ID LBRACK . exp RBRACK 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 90
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 58:

	functionCall : ID LPAREN . RPAREN 
	functionCall : ID LPAREN . funargs RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	RPAREN	shift 93
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 92
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	funargs	goto 91
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 59:

	fieldLvalue : fieldLvalue DOT ID .  (reduce by rule 57)



	.	reduce by rule 57


state 60:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 
	subscriptLvalue : fieldLvalue LBRACK exp . RBRACK 

	RBRACK	shift 94
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	error


state 61:

	fieldLvalue : subscriptLvalue DOT ID .  (reduce by rule 58)



	.	reduce by rule 58


state 62:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 
	subscriptLvalue : subscriptLvalue LBRACK exp . RBRACK 

	RBRACK	shift 95
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	error


state 63:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 49)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 49


state 64:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	booleanExp : exp OR exp .  (reduce by rule 66)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29


	.	reduce by rule 66


state 65:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp AND exp .  (reduce by rule 65)
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30


	.	reduce by rule 65


state 66:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp GE exp .  (reduce by rule 63)
	comparison : exp . LE exp 

	EOF	reduce by rule 63
	COMMA	reduce by rule 63
	SEMICOLON	reduce by rule 63
	RPAREN	reduce by rule 63
	RBRACK	reduce by rule 63
	RBRACE	reduce by rule 63
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 63
	OR	reduce by rule 63
	THEN	reduce by rule 63
	ELSE	reduce by rule 63
	TO	reduce by rule 63
	DO	reduce by rule 63
	IN	reduce by rule 63
	END	reduce by rule 63
	FUNCTION	reduce by rule 63
	VAR	reduce by rule 63
	TYPE	reduce by rule 63


	.	error


state 67:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp GT exp .  (reduce by rule 61)
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 61
	COMMA	reduce by rule 61
	SEMICOLON	reduce by rule 61
	RPAREN	reduce by rule 61
	RBRACK	reduce by rule 61
	RBRACE	reduce by rule 61
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 61
	OR	reduce by rule 61
	THEN	reduce by rule 61
	ELSE	reduce by rule 61
	TO	reduce by rule 61
	DO	reduce by rule 61
	IN	reduce by rule 61
	END	reduce by rule 61
	FUNCTION	reduce by rule 61
	VAR	reduce by rule 61
	TYPE	reduce by rule 61


	.	error


state 68:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 
	comparison : exp LE exp .  (reduce by rule 64)

	EOF	reduce by rule 64
	COMMA	reduce by rule 64
	SEMICOLON	reduce by rule 64
	RPAREN	reduce by rule 64
	RBRACK	reduce by rule 64
	RBRACE	reduce by rule 64
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 64
	OR	reduce by rule 64
	THEN	reduce by rule 64
	ELSE	reduce by rule 64
	TO	reduce by rule 64
	DO	reduce by rule 64
	IN	reduce by rule 64
	END	reduce by rule 64
	FUNCTION	reduce by rule 64
	VAR	reduce by rule 64
	TYPE	reduce by rule 64


	.	error


state 69:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp LT exp .  (reduce by rule 62)
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 62
	COMMA	reduce by rule 62
	SEMICOLON	reduce by rule 62
	RPAREN	reduce by rule 62
	RBRACK	reduce by rule 62
	RBRACE	reduce by rule 62
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 62
	OR	reduce by rule 62
	THEN	reduce by rule 62
	ELSE	reduce by rule 62
	TO	reduce by rule 62
	DO	reduce by rule 62
	IN	reduce by rule 62
	END	reduce by rule 62
	FUNCTION	reduce by rule 62
	VAR	reduce by rule 62
	TYPE	reduce by rule 62


	.	error


state 70:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp NEQ exp .  (reduce by rule 60)
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 60
	COMMA	reduce by rule 60
	SEMICOLON	reduce by rule 60
	RPAREN	reduce by rule 60
	RBRACK	reduce by rule 60
	RBRACE	reduce by rule 60
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 60
	OR	reduce by rule 60
	THEN	reduce by rule 60
	ELSE	reduce by rule 60
	TO	reduce by rule 60
	DO	reduce by rule 60
	IN	reduce by rule 60
	END	reduce by rule 60
	FUNCTION	reduce by rule 60
	VAR	reduce by rule 60
	TYPE	reduce by rule 60


	.	error


state 71:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp EQ exp .  (reduce by rule 59)
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 59
	COMMA	reduce by rule 59
	SEMICOLON	reduce by rule 59
	RPAREN	reduce by rule 59
	RBRACK	reduce by rule 59
	RBRACE	reduce by rule 59
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 59
	OR	reduce by rule 59
	THEN	reduce by rule 59
	ELSE	reduce by rule 59
	TO	reduce by rule 59
	DO	reduce by rule 59
	IN	reduce by rule 59
	END	reduce by rule 59
	FUNCTION	reduce by rule 59
	VAR	reduce by rule 59
	TYPE	reduce by rule 59


	.	error


state 72:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arithmeticExp : exp DIVIDE exp .  (reduce by rule 70)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 70


state 73:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp TIMES exp .  (reduce by rule 69)
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 69


state 74:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp MINUS exp .  (reduce by rule 68)
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	TIMES	shift 37
	DIVIDE	shift 36


	.	reduce by rule 68


state 75:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp PLUS exp .  (reduce by rule 67)
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	TIMES	shift 37
	DIVIDE	shift 36


	.	reduce by rule 67


state 76:

	decs : decs dec .  (reduce by rule 29)



	.	reduce by rule 29


state 77:

	exp : LET decs IN . expseq END 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 53
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	expseq	goto 96
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 78:

	tydec : TYPE ID . EQ ty 

	EQ	shift 97


	.	error


state 79:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 99
	ASSIGN	shift 98


	.	error


state 80:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID . LPAREN RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN RPAREN COLON ID EQ exp 

	LPAREN	shift 100


	.	error


state 81:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 101
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 82:

	exp : WHILE exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 102
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 83:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 103
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 84:

	exp : LPAREN expseq RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 85:

	expseq : exp SEMICOLON . expseq 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 53
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	expseq	goto 104
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 86:

	fieldLvalue : ID DOT ID .  (reduce by rule 56)



	.	reduce by rule 56


state 87:

	recordCreation : ID LBRACE recflds . RBRACE 

	RBRACE	shift 105


	.	error


state 88:

	recordCreation : ID LBRACE RBRACE .  (reduce by rule 21)



	.	reduce by rule 21


state 89:

	recflds : ID . EQ exp 
	recflds : ID . EQ exp COMMA recflds 

	EQ	shift 106


	.	error


state 90:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arrayCreation : ID LBRACK exp . RBRACK OF exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 
	subscriptLvalue : ID LBRACK exp . RBRACK 

	RBRACK	shift 107
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	error


state 91:

	functionCall : ID LPAREN funargs . RPAREN 

	RPAREN	shift 108


	.	error


state 92:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	funargs : exp .  (reduce by rule 26)
	funargs : exp . COMMA funargs 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	COMMA	shift 109
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 26


state 93:

	functionCall : ID LPAREN RPAREN .  (reduce by rule 24)



	.	reduce by rule 24


state 94:

	subscriptLvalue : fieldLvalue LBRACK exp RBRACK .  (reduce by rule 55)



	.	reduce by rule 55


state 95:

	subscriptLvalue : subscriptLvalue LBRACK exp RBRACK .  (reduce by rule 54)



	.	reduce by rule 54


state 96:

	exp : LET decs IN expseq . END 

	END	shift 110


	.	error


state 97:

	tydec : TYPE ID EQ . ty 

	ID	shift 114
	LBRACE	shift 113
	ARRAY	shift 112

	ty	goto 111

	.	error


state 98:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 115
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 99:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 116


	.	error


state 100:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 
	fundec : FUNCTION ID LPAREN . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . RPAREN COLON ID EQ exp 

	ID	shift 119
	RPAREN	shift 118

	tyfields	goto 117

	.	error


state 101:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	TO	shift 120


	.	error


state 102:

	exp : WHILE exp DO exp .  (reduce by rule 12)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 12


state 103:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 11)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	ELSE	shift 121


	.	reduce by rule 11


state 104:

	expseq : exp SEMICOLON expseq .  (reduce by rule 30)



	.	reduce by rule 30


state 105:

	recordCreation : ID LBRACE recflds RBRACE .  (reduce by rule 20)



	.	reduce by rule 20


state 106:

	recflds : ID EQ . exp 
	recflds : ID EQ . exp COMMA recflds 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 122
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 107:

	arrayCreation : ID LBRACK exp RBRACK . OF exp 
	subscriptLvalue : ID LBRACK exp RBRACK .  (reduce by rule 53)

	OF	shift 123


	.	reduce by rule 53


state 108:

	functionCall : ID LPAREN funargs RPAREN .  (reduce by rule 25)



	.	reduce by rule 25


state 109:

	funargs : exp COMMA . funargs 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 92
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	funargs	goto 124
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 110:

	exp : LET decs IN expseq END .  (reduce by rule 15)



	.	reduce by rule 15


state 111:

	tydec : TYPE ID EQ ty .  (reduce by rule 35)



	.	reduce by rule 35


state 112:

	ty : ARRAY . OF ID 

	OF	shift 125


	.	error


state 113:

	ty : LBRACE . tyfields RBRACE 
	ty : LBRACE . RBRACE 

	ID	shift 119
	RBRACE	shift 127

	tyfields	goto 126

	.	error


state 114:

	ty : ID .  (reduce by rule 36)



	.	reduce by rule 36


state 115:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 42)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 42


state 116:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 128


	.	error


state 117:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 129


	.	error


state 118:

	fundec : FUNCTION ID LPAREN RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN RPAREN . COLON ID EQ exp 

	COLON	shift 131
	EQ	shift 130


	.	error


state 119:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 132


	.	error


state 120:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 133
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 121:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 134
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 122:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	recflds : ID EQ exp .  (reduce by rule 22)
	recflds : ID EQ exp . COMMA recflds 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	COMMA	shift 135
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 22


state 123:

	arrayCreation : ID LBRACK exp RBRACK OF . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 136
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 124:

	funargs : exp COMMA funargs .  (reduce by rule 27)



	.	reduce by rule 27


state 125:

	ty : ARRAY OF . ID 

	ID	shift 137


	.	error


state 126:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 138


	.	error


state 127:

	ty : LBRACE RBRACE .  (reduce by rule 38)



	.	reduce by rule 38


state 128:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 139
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 129:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 141
	EQ	shift 140


	.	error


state 130:

	fundec : FUNCTION ID LPAREN RPAREN EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 142
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 131:

	fundec : FUNCTION ID LPAREN RPAREN COLON . ID EQ exp 

	ID	shift 143


	.	error


state 132:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 144


	.	error


state 133:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	DO	shift 145


	.	error


state 134:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 10)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 10


state 135:

	recflds : ID EQ exp COMMA . recflds 

	ID	shift 89

	recflds	goto 146

	.	error


state 136:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arrayCreation : ID LBRACK exp RBRACK OF exp .  (reduce by rule 48)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 48


state 137:

	ty : ARRAY OF ID .  (reduce by rule 39)



	.	reduce by rule 39


state 138:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 37)



	.	reduce by rule 37


state 139:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 43)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 43


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 147
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 141:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 148


	.	error


state 142:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	fundec : FUNCTION ID LPAREN RPAREN EQ exp .  (reduce by rule 46)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 46


state 143:

	fundec : FUNCTION ID LPAREN RPAREN COLON ID . EQ exp 

	EQ	shift 149


	.	error


state 144:

	tyfields : ID COLON ID .  (reduce by rule 40)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 150


	.	reduce by rule 40


state 145:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 151
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 146:

	recflds : ID EQ exp COMMA recflds .  (reduce by rule 23)



	.	reduce by rule 23


state 147:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 44)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 44


state 148:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 152


	.	error


state 149:

	fundec : FUNCTION ID LPAREN RPAREN COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 153
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 150:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 119

	tyfields	goto 154

	.	error


state 151:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 13)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 13


state 152:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 155
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	subscriptLvalue	goto 2
	fieldLvalue	goto 1

	.	error


state 153:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	fundec : FUNCTION ID LPAREN RPAREN COLON ID EQ exp .  (reduce by rule 47)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 47


state 154:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 41)



	.	reduce by rule 41


state 155:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 45)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 45


state 156:


	EOF	accept


	.	error

536 of 1089 action table entries left after compaction
450 goto table entries
