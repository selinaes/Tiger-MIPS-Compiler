1 shift/reduce conflict

error:  state 20: shift/reduce conflict (shift LBRACK, reduce by rule 46)

state 0:

	program : . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 9
	program	goto 138
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 1:

	exp : comparison .  (reduce by rule 7)



	.	reduce by rule 7


state 2:

	exp : record .  (reduce by rule 18)



	.	reduce by rule 18


state 3:

	exp : booleanExp .  (reduce by rule 6)



	.	reduce by rule 6


state 4:

	exp : functionCall .  (reduce by rule 8)



	.	reduce by rule 8


state 5:

	exp : array .  (reduce by rule 17)



	.	reduce by rule 17


state 6:

	exp : assignment .  (reduce by rule 9)



	.	reduce by rule 9


state 7:

	exp : lvalue .  (reduce by rule 4)
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 
	assignment : lvalue . ASSIGN exp 

	LBRACK	shift 23
	DOT	shift 22
	ASSIGN	shift 21


	.	reduce by rule 4


state 8:

	exp : arithmeticExp .  (reduce by rule 5)



	.	reduce by rule 5


state 9:

	program : exp .  (reduce by rule 0)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 0


state 10:

	exp : NIL .  (reduce by rule 3)



	.	reduce by rule 3


state 11:

	exp : BREAK .  (reduce by rule 14)



	.	reduce by rule 14


state 12:

	exp : LET . decs IN expseq END 

	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	fundec	goto 40
	vardec	goto 39
	tydec	goto 38
	dec	goto 37
	decs	goto 36

	.	error


state 13:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 44


	.	error


state 14:

	exp : WHILE . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 45
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 15:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 46
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 16:

	arithmeticExp : MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 47
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 17:

	exp : LPAREN . expseq RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 49
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	expseq	goto 48
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 18:

	exp : STRING .  (reduce by rule 2)



	.	reduce by rule 2


state 19:

	exp : INT .  (reduce by rule 1)



	.	reduce by rule 1

error:  state 20: shift/reduce conflict (shift LBRACK, reduce by rule 46)

state 20:

	lvalue : ID .  (reduce by rule 46)
	array : ID . LBRACK exp RBRACK OF exp 
	functionCall : ID . LPAREN RPAREN 
	functionCall : ID . LPAREN funargs RPAREN 
	record : ID . LBRACE recflds RBRACE 

	LPAREN	shift 52
	LBRACK	shift 51
	LBRACE	shift 50


	.	reduce by rule 46


state 21:

	assignment : lvalue ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 53
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 22:

	lvalue : lvalue DOT . ID 

	ID	shift 54


	.	error


state 23:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 55
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 24:

	booleanExp : exp OR . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 56
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 25:

	booleanExp : exp AND . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 57
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 26:

	comparison : exp GE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 58
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 27:

	comparison : exp GT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 59
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 28:

	comparison : exp LE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 60
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 29:

	comparison : exp LT . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 61
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 30:

	comparison : exp NEQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 62
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 31:

	comparison : exp EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 63
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 32:

	arithmeticExp : exp DIVIDE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 64
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 33:

	arithmeticExp : exp TIMES . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 65
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 34:

	arithmeticExp : exp MINUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 66
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 35:

	arithmeticExp : exp PLUS . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 67
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 36:

	exp : LET decs . IN expseq END 
	decs : decs . dec 

	IN	shift 69
	FUNCTION	shift 43
	VAR	shift 42
	TYPE	shift 41

	fundec	goto 40
	vardec	goto 39
	tydec	goto 38
	dec	goto 68

	.	error


state 37:

	decs : dec .  (reduce by rule 26)



	.	reduce by rule 26


state 38:

	dec : tydec .  (reduce by rule 30)



	.	reduce by rule 30


state 39:

	dec : vardec .  (reduce by rule 31)



	.	reduce by rule 31


state 40:

	dec : fundec .  (reduce by rule 32)



	.	reduce by rule 32


state 41:

	tydec : TYPE . ID EQ ty 

	ID	shift 70


	.	error


state 42:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 71


	.	error


state 43:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 72


	.	error


state 44:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 73


	.	error


state 45:

	exp : WHILE exp . DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 74


	.	error


state 46:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	THEN	shift 75


	.	error


state 47:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arithmeticExp : MINUS exp .  (reduce by rule 61)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 61


state 48:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 76


	.	error


state 49:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	expseq : exp . SEMICOLON expseq 
	expseq : exp .  (reduce by rule 29)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	SEMICOLON	shift 77
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 29


state 50:

	record : ID LBRACE . recflds RBRACE 

	ID	shift 79

	recflds	goto 78

	.	error


state 51:

	array : ID LBRACK . exp RBRACK OF exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 80
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 52:

	functionCall : ID LPAREN . RPAREN 
	functionCall : ID LPAREN . funargs RPAREN 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	RPAREN	shift 83
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 82
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	funargs	goto 81
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 53:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 45)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 45


state 54:

	lvalue : lvalue DOT ID .  (reduce by rule 48)



	.	reduce by rule 48


state 55:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	lvalue : lvalue LBRACK exp . RBRACK 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	RBRACK	shift 84
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 56:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	booleanExp : exp OR exp .  (reduce by rule 56)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25


	.	reduce by rule 56


state 57:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp AND exp .  (reduce by rule 55)
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26


	.	reduce by rule 55


state 58:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp GE exp .  (reduce by rule 53)
	comparison : exp . LE exp 

	EOF	reduce by rule 53
	COMMA	reduce by rule 53
	COLON	reduce by rule 53
	SEMICOLON	reduce by rule 53
	RPAREN	reduce by rule 53
	RBRACK	reduce by rule 53
	RBRACE	reduce by rule 53
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 53
	OR	reduce by rule 53
	THEN	reduce by rule 53
	ELSE	reduce by rule 53
	TO	reduce by rule 53
	DO	reduce by rule 53
	IN	reduce by rule 53
	END	reduce by rule 53
	FUNCTION	reduce by rule 53
	VAR	reduce by rule 53
	TYPE	reduce by rule 53


	.	error


state 59:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp GT exp .  (reduce by rule 51)
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 51
	COMMA	reduce by rule 51
	COLON	reduce by rule 51
	SEMICOLON	reduce by rule 51
	RPAREN	reduce by rule 51
	RBRACK	reduce by rule 51
	RBRACE	reduce by rule 51
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 51
	OR	reduce by rule 51
	THEN	reduce by rule 51
	ELSE	reduce by rule 51
	TO	reduce by rule 51
	DO	reduce by rule 51
	IN	reduce by rule 51
	END	reduce by rule 51
	FUNCTION	reduce by rule 51
	VAR	reduce by rule 51
	TYPE	reduce by rule 51


	.	error


state 60:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 
	comparison : exp LE exp .  (reduce by rule 54)

	EOF	reduce by rule 54
	COMMA	reduce by rule 54
	COLON	reduce by rule 54
	SEMICOLON	reduce by rule 54
	RPAREN	reduce by rule 54
	RBRACK	reduce by rule 54
	RBRACE	reduce by rule 54
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 54
	OR	reduce by rule 54
	THEN	reduce by rule 54
	ELSE	reduce by rule 54
	TO	reduce by rule 54
	DO	reduce by rule 54
	IN	reduce by rule 54
	END	reduce by rule 54
	FUNCTION	reduce by rule 54
	VAR	reduce by rule 54
	TYPE	reduce by rule 54


	.	error


state 61:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp LT exp .  (reduce by rule 52)
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 52
	COMMA	reduce by rule 52
	COLON	reduce by rule 52
	SEMICOLON	reduce by rule 52
	RPAREN	reduce by rule 52
	RBRACK	reduce by rule 52
	RBRACE	reduce by rule 52
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 52
	OR	reduce by rule 52
	THEN	reduce by rule 52
	ELSE	reduce by rule 52
	TO	reduce by rule 52
	DO	reduce by rule 52
	IN	reduce by rule 52
	END	reduce by rule 52
	FUNCTION	reduce by rule 52
	VAR	reduce by rule 52
	TYPE	reduce by rule 52


	.	error


state 62:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp NEQ exp .  (reduce by rule 50)
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 50
	COMMA	reduce by rule 50
	COLON	reduce by rule 50
	SEMICOLON	reduce by rule 50
	RPAREN	reduce by rule 50
	RBRACK	reduce by rule 50
	RBRACE	reduce by rule 50
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 50
	OR	reduce by rule 50
	THEN	reduce by rule 50
	ELSE	reduce by rule 50
	TO	reduce by rule 50
	DO	reduce by rule 50
	IN	reduce by rule 50
	END	reduce by rule 50
	FUNCTION	reduce by rule 50
	VAR	reduce by rule 50
	TYPE	reduce by rule 50


	.	error


state 63:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp EQ exp .  (reduce by rule 49)
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 49
	COMMA	reduce by rule 49
	COLON	reduce by rule 49
	SEMICOLON	reduce by rule 49
	RPAREN	reduce by rule 49
	RBRACK	reduce by rule 49
	RBRACE	reduce by rule 49
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	AND	reduce by rule 49
	OR	reduce by rule 49
	THEN	reduce by rule 49
	ELSE	reduce by rule 49
	TO	reduce by rule 49
	DO	reduce by rule 49
	IN	reduce by rule 49
	END	reduce by rule 49
	FUNCTION	reduce by rule 49
	VAR	reduce by rule 49
	TYPE	reduce by rule 49


	.	error


state 64:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arithmeticExp : exp DIVIDE exp .  (reduce by rule 60)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 60


state 65:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp TIMES exp .  (reduce by rule 59)
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 59


state 66:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp MINUS exp .  (reduce by rule 58)
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 58


state 67:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp PLUS exp .  (reduce by rule 57)
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	TIMES	shift 33
	DIVIDE	shift 32


	.	reduce by rule 57


state 68:

	decs : decs dec .  (reduce by rule 27)



	.	reduce by rule 27


state 69:

	exp : LET decs IN . expseq END 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 49
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	expseq	goto 85
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 70:

	tydec : TYPE ID . EQ ty 

	EQ	shift 86


	.	error


state 71:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 88
	ASSIGN	shift 87


	.	error


state 72:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 89


	.	error


state 73:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 90
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 74:

	exp : WHILE exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 91
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 75:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 92
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 76:

	exp : LPAREN expseq RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 77:

	expseq : exp SEMICOLON . expseq 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 49
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	expseq	goto 93
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 78:

	record : ID LBRACE recflds . RBRACE 

	RBRACE	shift 94


	.	error


state 79:

	recflds : ID . EQ exp 
	recflds : ID . EQ exp COLON recflds 

	EQ	shift 95


	.	error


state 80:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	array : ID LBRACK exp . RBRACK OF exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	RBRACK	shift 96
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	error


state 81:

	functionCall : ID LPAREN funargs . RPAREN 

	RPAREN	shift 97


	.	error


state 82:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	funargs : exp .  (reduce by rule 24)
	funargs : exp . COMMA funargs 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	COMMA	shift 98
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 24


state 83:

	functionCall : ID LPAREN RPAREN .  (reduce by rule 22)



	.	reduce by rule 22


state 84:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 47)



	.	reduce by rule 47


state 85:

	exp : LET decs IN expseq . END 

	END	shift 99


	.	error


state 86:

	tydec : TYPE ID EQ . ty 

	ID	shift 103
	LBRACE	shift 102
	ARRAY	shift 101

	ty	goto 100

	.	error


state 87:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 104
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 88:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 105


	.	error


state 89:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 107

	tyfields	goto 106

	.	error


state 90:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	TO	shift 108


	.	error


state 91:

	exp : WHILE exp DO exp .  (reduce by rule 12)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 12


state 92:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 11)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	ELSE	shift 109


	.	reduce by rule 11


state 93:

	expseq : exp SEMICOLON expseq .  (reduce by rule 28)



	.	reduce by rule 28


state 94:

	record : ID LBRACE recflds RBRACE .  (reduce by rule 19)



	.	reduce by rule 19


state 95:

	recflds : ID EQ . exp 
	recflds : ID EQ . exp COLON recflds 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 110
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 96:

	array : ID LBRACK exp RBRACK . OF exp 

	OF	shift 111


	.	error


state 97:

	functionCall : ID LPAREN funargs RPAREN .  (reduce by rule 23)



	.	reduce by rule 23


state 98:

	funargs : exp COMMA . funargs 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 82
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	funargs	goto 112
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 99:

	exp : LET decs IN expseq END .  (reduce by rule 15)



	.	reduce by rule 15


state 100:

	tydec : TYPE ID EQ ty .  (reduce by rule 33)



	.	reduce by rule 33


state 101:

	ty : ARRAY . OF ID 

	OF	shift 113


	.	error


state 102:

	ty : LBRACE . tyfields RBRACE 
	ty : LBRACE . RBRACE 

	ID	shift 107
	RBRACE	shift 115

	tyfields	goto 114

	.	error


state 103:

	ty : ID .  (reduce by rule 34)



	.	reduce by rule 34


state 104:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 40)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 40


state 105:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 116


	.	error


state 106:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 117


	.	error


state 107:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 118


	.	error


state 108:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 119
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 109:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 120
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 110:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	recflds : ID EQ exp .  (reduce by rule 20)
	recflds : ID EQ exp . COLON recflds 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	COLON	shift 121
	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 20


state 111:

	array : ID LBRACK exp RBRACK OF . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 122
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 112:

	funargs : exp COMMA funargs .  (reduce by rule 25)



	.	reduce by rule 25


state 113:

	ty : ARRAY OF . ID 

	ID	shift 123


	.	error


state 114:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 124


	.	error


state 115:

	ty : LBRACE RBRACE .  (reduce by rule 36)



	.	reduce by rule 36


state 116:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 125
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 117:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 127
	EQ	shift 126


	.	error


state 118:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 128


	.	error


state 119:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24
	DO	shift 129


	.	error


state 120:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 10)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 10


state 121:

	recflds : ID EQ exp COLON . recflds 

	ID	shift 79

	recflds	goto 130

	.	error


state 122:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	array : ID LBRACK exp RBRACK OF exp .  (reduce by rule 44)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 44


state 123:

	ty : ARRAY OF ID .  (reduce by rule 37)



	.	reduce by rule 37


state 124:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 35)



	.	reduce by rule 35


state 125:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 41)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 41


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 131
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 127:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 132


	.	error


state 128:

	tyfields : ID COLON ID .  (reduce by rule 38)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 133


	.	reduce by rule 38


state 129:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 134
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 130:

	recflds : ID EQ exp COLON recflds .  (reduce by rule 21)



	.	reduce by rule 21


state 131:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 42)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 42


state 132:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 135


	.	error


state 133:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 107

	tyfields	goto 136

	.	error


state 134:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 13)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 13


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 20
	INT	shift 19
	STRING	shift 18
	LPAREN	shift 17
	MINUS	shift 16
	IF	shift 15
	WHILE	shift 14
	FOR	shift 13
	LET	shift 12
	BREAK	shift 11
	NIL	shift 10

	exp	goto 137
	arithmeticExp	goto 8
	lvalue	goto 7
	assignment	goto 6
	array	goto 5
	functionCall	goto 4
	booleanExp	goto 3
	record	goto 2
	comparison	goto 1

	.	error


state 136:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 39)



	.	reduce by rule 39


state 137:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 43)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 35
	MINUS	shift 34
	TIMES	shift 33
	DIVIDE	shift 32
	EQ	shift 31
	NEQ	shift 30
	LT	shift 29
	LE	shift 28
	GT	shift 27
	GE	shift 26
	AND	shift 25
	OR	shift 24


	.	reduce by rule 43


state 138:


	EOF	accept


	.	error

480 of 995 action table entries left after compaction
345 goto table entries
