
state 0:

	program : . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 11
	program	goto 147
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 1:

	lvalue : dotTmp .  (reduce by rule 48)
	tmp : dotTmp . LBRACK exp RBRACK 
	dotTmp : dotTmp . DOT ID 

	LBRACK	shift 24
	DOT	shift 23


	.	reduce by rule 48


state 2:

	lvalue : tmp .  (reduce by rule 47)
	tmp : tmp . LBRACK exp RBRACK 
	dotTmp : tmp . DOT ID 

	LBRACK	shift 26
	DOT	shift 25


	.	reduce by rule 47


state 3:

	exp : comparison .  (reduce by rule 7)



	.	reduce by rule 7


state 4:

	exp : recordCreation .  (reduce by rule 18)



	.	reduce by rule 18


state 5:

	exp : booleanExp .  (reduce by rule 6)



	.	reduce by rule 6


state 6:

	exp : functionCall .  (reduce by rule 8)



	.	reduce by rule 8


state 7:

	exp : arrayCreation .  (reduce by rule 17)



	.	reduce by rule 17


state 8:

	exp : assignment .  (reduce by rule 9)



	.	reduce by rule 9


state 9:

	exp : lvalue .  (reduce by rule 4)
	assignment : lvalue . ASSIGN exp 

	ASSIGN	shift 27


	.	reduce by rule 4


state 10:

	exp : arithmeticExp .  (reduce by rule 5)



	.	reduce by rule 5


state 11:

	program : exp .  (reduce by rule 0)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 0


state 12:

	exp : NIL .  (reduce by rule 3)



	.	reduce by rule 3


state 13:

	exp : BREAK .  (reduce by rule 14)



	.	reduce by rule 14


state 14:

	exp : LET . decs IN expseq END 

	FUNCTION	shift 47
	VAR	shift 46
	TYPE	shift 45

	fundec	goto 44
	vardec	goto 43
	tydec	goto 42
	dec	goto 41
	decs	goto 40

	.	error


state 15:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 48


	.	error


state 16:

	exp : WHILE . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 49
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 17:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 50
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 18:

	arithmeticExp : MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 51
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 19:

	exp : LPAREN . expseq RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 53
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	expseq	goto 52
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 20:

	exp : STRING .  (reduce by rule 2)



	.	reduce by rule 2


state 21:

	exp : INT .  (reduce by rule 1)



	.	reduce by rule 1


state 22:

	lvalue : ID .  (reduce by rule 46)
	arrayCreation : ID . LBRACK exp RBRACK OF exp 
	functionCall : ID . LPAREN RPAREN 
	functionCall : ID . LPAREN funargs RPAREN 
	recordCreation : ID . LBRACE recflds RBRACE 
	tmp : ID . LBRACK exp RBRACK 
	dotTmp : ID . DOT ID 

	LPAREN	shift 57
	LBRACK	shift 56
	LBRACE	shift 55
	DOT	shift 54


	.	reduce by rule 46


state 23:

	dotTmp : dotTmp DOT . ID 

	ID	shift 58


	.	error


state 24:

	tmp : dotTmp LBRACK . exp RBRACK 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 59
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 25:

	dotTmp : tmp DOT . ID 

	ID	shift 60


	.	error


state 26:

	tmp : tmp LBRACK . exp RBRACK 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 61
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 27:

	assignment : lvalue ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 62
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 28:

	booleanExp : exp OR . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 63
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 29:

	booleanExp : exp AND . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 64
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 30:

	comparison : exp GE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 65
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 31:

	comparison : exp GT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 66
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 32:

	comparison : exp LE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 67
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 33:

	comparison : exp LT . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 68
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 34:

	comparison : exp NEQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 69
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 35:

	comparison : exp EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 70
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 36:

	arithmeticExp : exp DIVIDE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 71
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 37:

	arithmeticExp : exp TIMES . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 72
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 38:

	arithmeticExp : exp MINUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 73
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 39:

	arithmeticExp : exp PLUS . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 74
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 40:

	exp : LET decs . IN expseq END 
	decs : decs . dec 

	IN	shift 76
	FUNCTION	shift 47
	VAR	shift 46
	TYPE	shift 45

	fundec	goto 44
	vardec	goto 43
	tydec	goto 42
	dec	goto 75

	.	error


state 41:

	decs : dec .  (reduce by rule 26)



	.	reduce by rule 26


state 42:

	dec : tydec .  (reduce by rule 30)



	.	reduce by rule 30


state 43:

	dec : vardec .  (reduce by rule 31)



	.	reduce by rule 31


state 44:

	dec : fundec .  (reduce by rule 32)



	.	reduce by rule 32


state 45:

	tydec : TYPE . ID EQ ty 

	ID	shift 77


	.	error


state 46:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 78


	.	error


state 47:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 79


	.	error


state 48:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 80


	.	error


state 49:

	exp : WHILE exp . DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	DO	shift 81


	.	error


state 50:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	THEN	shift 82


	.	error


state 51:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arithmeticExp : MINUS exp .  (reduce by rule 67)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 67


state 52:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 83


	.	error


state 53:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	expseq : exp . SEMICOLON expseq 
	expseq : exp .  (reduce by rule 29)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	SEMICOLON	shift 84
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 29


state 54:

	dotTmp : ID DOT . ID 

	ID	shift 85


	.	error


state 55:

	recordCreation : ID LBRACE . recflds RBRACE 

	ID	shift 87

	recflds	goto 86

	.	error


state 56:

	arrayCreation : ID LBRACK . exp RBRACK OF exp 
	tmp : ID LBRACK . exp RBRACK 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 88
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 57:

	functionCall : ID LPAREN . RPAREN 
	functionCall : ID LPAREN . funargs RPAREN 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	RPAREN	shift 91
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 90
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	funargs	goto 89
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 58:

	dotTmp : dotTmp DOT ID .  (reduce by rule 53)



	.	reduce by rule 53


state 59:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 
	tmp : dotTmp LBRACK exp . RBRACK 

	RBRACK	shift 92
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	error


state 60:

	dotTmp : tmp DOT ID .  (reduce by rule 54)



	.	reduce by rule 54


state 61:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 
	tmp : tmp LBRACK exp . RBRACK 

	RBRACK	shift 93
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	error


state 62:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 45)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 45


state 63:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	booleanExp : exp OR exp .  (reduce by rule 62)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29


	.	reduce by rule 62


state 64:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp AND exp .  (reduce by rule 61)
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30


	.	reduce by rule 61


state 65:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp GE exp .  (reduce by rule 59)
	comparison : exp . LE exp 

	EOF	reduce by rule 59
	COMMA	reduce by rule 59
	COLON	reduce by rule 59
	SEMICOLON	reduce by rule 59
	RPAREN	reduce by rule 59
	RBRACK	reduce by rule 59
	RBRACE	reduce by rule 59
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 59
	OR	reduce by rule 59
	THEN	reduce by rule 59
	ELSE	reduce by rule 59
	TO	reduce by rule 59
	DO	reduce by rule 59
	IN	reduce by rule 59
	END	reduce by rule 59
	FUNCTION	reduce by rule 59
	VAR	reduce by rule 59
	TYPE	reduce by rule 59


	.	error


state 66:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp GT exp .  (reduce by rule 57)
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 57
	COMMA	reduce by rule 57
	COLON	reduce by rule 57
	SEMICOLON	reduce by rule 57
	RPAREN	reduce by rule 57
	RBRACK	reduce by rule 57
	RBRACE	reduce by rule 57
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 57
	OR	reduce by rule 57
	THEN	reduce by rule 57
	ELSE	reduce by rule 57
	TO	reduce by rule 57
	DO	reduce by rule 57
	IN	reduce by rule 57
	END	reduce by rule 57
	FUNCTION	reduce by rule 57
	VAR	reduce by rule 57
	TYPE	reduce by rule 57


	.	error


state 67:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 
	comparison : exp LE exp .  (reduce by rule 60)

	EOF	reduce by rule 60
	COMMA	reduce by rule 60
	COLON	reduce by rule 60
	SEMICOLON	reduce by rule 60
	RPAREN	reduce by rule 60
	RBRACK	reduce by rule 60
	RBRACE	reduce by rule 60
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 60
	OR	reduce by rule 60
	THEN	reduce by rule 60
	ELSE	reduce by rule 60
	TO	reduce by rule 60
	DO	reduce by rule 60
	IN	reduce by rule 60
	END	reduce by rule 60
	FUNCTION	reduce by rule 60
	VAR	reduce by rule 60
	TYPE	reduce by rule 60


	.	error


state 68:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp LT exp .  (reduce by rule 58)
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 58
	COMMA	reduce by rule 58
	COLON	reduce by rule 58
	SEMICOLON	reduce by rule 58
	RPAREN	reduce by rule 58
	RBRACK	reduce by rule 58
	RBRACE	reduce by rule 58
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 58
	OR	reduce by rule 58
	THEN	reduce by rule 58
	ELSE	reduce by rule 58
	TO	reduce by rule 58
	DO	reduce by rule 58
	IN	reduce by rule 58
	END	reduce by rule 58
	FUNCTION	reduce by rule 58
	VAR	reduce by rule 58
	TYPE	reduce by rule 58


	.	error


state 69:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp NEQ exp .  (reduce by rule 56)
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 56
	COMMA	reduce by rule 56
	COLON	reduce by rule 56
	SEMICOLON	reduce by rule 56
	RPAREN	reduce by rule 56
	RBRACK	reduce by rule 56
	RBRACE	reduce by rule 56
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 56
	OR	reduce by rule 56
	THEN	reduce by rule 56
	ELSE	reduce by rule 56
	TO	reduce by rule 56
	DO	reduce by rule 56
	IN	reduce by rule 56
	END	reduce by rule 56
	FUNCTION	reduce by rule 56
	VAR	reduce by rule 56
	TYPE	reduce by rule 56


	.	error


state 70:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp EQ exp .  (reduce by rule 55)
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 55
	COMMA	reduce by rule 55
	COLON	reduce by rule 55
	SEMICOLON	reduce by rule 55
	RPAREN	reduce by rule 55
	RBRACK	reduce by rule 55
	RBRACE	reduce by rule 55
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	AND	reduce by rule 55
	OR	reduce by rule 55
	THEN	reduce by rule 55
	ELSE	reduce by rule 55
	TO	reduce by rule 55
	DO	reduce by rule 55
	IN	reduce by rule 55
	END	reduce by rule 55
	FUNCTION	reduce by rule 55
	VAR	reduce by rule 55
	TYPE	reduce by rule 55


	.	error


state 71:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arithmeticExp : exp DIVIDE exp .  (reduce by rule 66)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 66


state 72:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp TIMES exp .  (reduce by rule 65)
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 65


state 73:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp MINUS exp .  (reduce by rule 64)
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	TIMES	shift 37
	DIVIDE	shift 36


	.	reduce by rule 64


state 74:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp PLUS exp .  (reduce by rule 63)
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	TIMES	shift 37
	DIVIDE	shift 36


	.	reduce by rule 63


state 75:

	decs : decs dec .  (reduce by rule 27)



	.	reduce by rule 27


state 76:

	exp : LET decs IN . expseq END 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 53
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	expseq	goto 94
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 77:

	tydec : TYPE ID . EQ ty 

	EQ	shift 95


	.	error


state 78:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 97
	ASSIGN	shift 96


	.	error


state 79:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 98


	.	error


state 80:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 99
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 81:

	exp : WHILE exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 100
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 82:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 101
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 83:

	exp : LPAREN expseq RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 84:

	expseq : exp SEMICOLON . expseq 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 53
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	expseq	goto 102
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 85:

	dotTmp : ID DOT ID .  (reduce by rule 52)



	.	reduce by rule 52


state 86:

	recordCreation : ID LBRACE recflds . RBRACE 

	RBRACE	shift 103


	.	error


state 87:

	recflds : ID . EQ exp 
	recflds : ID . EQ exp COLON recflds 

	EQ	shift 104


	.	error


state 88:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arrayCreation : ID LBRACK exp . RBRACK OF exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 
	tmp : ID LBRACK exp . RBRACK 

	RBRACK	shift 105
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	error


state 89:

	functionCall : ID LPAREN funargs . RPAREN 

	RPAREN	shift 106


	.	error


state 90:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	funargs : exp .  (reduce by rule 24)
	funargs : exp . COMMA funargs 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	COMMA	shift 107
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 24


state 91:

	functionCall : ID LPAREN RPAREN .  (reduce by rule 22)



	.	reduce by rule 22


state 92:

	tmp : dotTmp LBRACK exp RBRACK .  (reduce by rule 51)



	.	reduce by rule 51


state 93:

	tmp : tmp LBRACK exp RBRACK .  (reduce by rule 50)



	.	reduce by rule 50


state 94:

	exp : LET decs IN expseq . END 

	END	shift 108


	.	error


state 95:

	tydec : TYPE ID EQ . ty 

	ID	shift 112
	LBRACE	shift 111
	ARRAY	shift 110

	ty	goto 109

	.	error


state 96:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 113
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 97:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 114


	.	error


state 98:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 116

	tyfields	goto 115

	.	error


state 99:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	TO	shift 117


	.	error


state 100:

	exp : WHILE exp DO exp .  (reduce by rule 12)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 12


state 101:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 11)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	ELSE	shift 118


	.	reduce by rule 11


state 102:

	expseq : exp SEMICOLON expseq .  (reduce by rule 28)



	.	reduce by rule 28


state 103:

	recordCreation : ID LBRACE recflds RBRACE .  (reduce by rule 19)



	.	reduce by rule 19


state 104:

	recflds : ID EQ . exp 
	recflds : ID EQ . exp COLON recflds 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 119
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 105:

	arrayCreation : ID LBRACK exp RBRACK . OF exp 
	tmp : ID LBRACK exp RBRACK .  (reduce by rule 49)

	OF	shift 120


	.	reduce by rule 49


state 106:

	functionCall : ID LPAREN funargs RPAREN .  (reduce by rule 23)



	.	reduce by rule 23


state 107:

	funargs : exp COMMA . funargs 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 90
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	funargs	goto 121
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 108:

	exp : LET decs IN expseq END .  (reduce by rule 15)



	.	reduce by rule 15


state 109:

	tydec : TYPE ID EQ ty .  (reduce by rule 33)



	.	reduce by rule 33


state 110:

	ty : ARRAY . OF ID 

	OF	shift 122


	.	error


state 111:

	ty : LBRACE . tyfields RBRACE 
	ty : LBRACE . RBRACE 

	ID	shift 116
	RBRACE	shift 124

	tyfields	goto 123

	.	error


state 112:

	ty : ID .  (reduce by rule 34)



	.	reduce by rule 34


state 113:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 40)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 40


state 114:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 125


	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 126


	.	error


state 116:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 127


	.	error


state 117:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 128
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 118:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 129
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 119:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	recflds : ID EQ exp .  (reduce by rule 20)
	recflds : ID EQ exp . COLON recflds 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	COLON	shift 130
	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 20


state 120:

	arrayCreation : ID LBRACK exp RBRACK OF . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 131
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 121:

	funargs : exp COMMA funargs .  (reduce by rule 25)



	.	reduce by rule 25


state 122:

	ty : ARRAY OF . ID 

	ID	shift 132


	.	error


state 123:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 133


	.	error


state 124:

	ty : LBRACE RBRACE .  (reduce by rule 36)



	.	reduce by rule 36


state 125:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 134
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 136
	EQ	shift 135


	.	error


state 127:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 137


	.	error


state 128:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28
	DO	shift 138


	.	error


state 129:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 10)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 10


state 130:

	recflds : ID EQ exp COLON . recflds 

	ID	shift 87

	recflds	goto 139

	.	error


state 131:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arrayCreation : ID LBRACK exp RBRACK OF exp .  (reduce by rule 44)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 44


state 132:

	ty : ARRAY OF ID .  (reduce by rule 37)



	.	reduce by rule 37


state 133:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 35)



	.	reduce by rule 35


state 134:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 41)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 41


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 140
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 136:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 141


	.	error


state 137:

	tyfields : ID COLON ID .  (reduce by rule 38)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 142


	.	reduce by rule 38


state 138:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 143
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 139:

	recflds : ID EQ exp COLON recflds .  (reduce by rule 21)



	.	reduce by rule 21


state 140:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 42)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 42


state 141:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 144


	.	error


state 142:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 116

	tyfields	goto 145

	.	error


state 143:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 13)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 13


state 144:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 22
	INT	shift 21
	STRING	shift 20
	LPAREN	shift 19
	MINUS	shift 18
	IF	shift 17
	WHILE	shift 16
	FOR	shift 15
	LET	shift 14
	BREAK	shift 13
	NIL	shift 12

	exp	goto 146
	arithmeticExp	goto 10
	lvalue	goto 9
	assignment	goto 8
	arrayCreation	goto 7
	functionCall	goto 6
	booleanExp	goto 5
	recordCreation	goto 4
	comparison	goto 3
	tmp	goto 2
	dotTmp	goto 1

	.	error


state 145:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 39)



	.	reduce by rule 39


state 146:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 43)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 39
	MINUS	shift 38
	TIMES	shift 37
	DIVIDE	shift 36
	EQ	shift 35
	NEQ	shift 34
	LT	shift 33
	LE	shift 32
	GT	shift 31
	GE	shift 30
	AND	shift 29
	OR	shift 28


	.	reduce by rule 43


state 147:


	EOF	accept


	.	error

498 of 1033 action table entries left after compaction
428 goto table entries
