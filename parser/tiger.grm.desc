1 shift/reduce conflict

error:  state 21: shift/reduce conflict (shift LBRACK, reduce by rule 19)

state 0:

	program : . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 10
	program	goto 145
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 1:

	arrayCreation : typeID . LBRACK exp RBRACK OF exp 
	recordCreation : typeID . LBRACE recflds RBRACE 

	LBRACK	shift 23
	LBRACE	shift 22


	.	error


state 2:

	exp : comparison .  (reduce by rule 7)



	.	reduce by rule 7


state 3:

	exp : recordCreation .  (reduce by rule 18)



	.	reduce by rule 18


state 4:

	exp : booleanExp .  (reduce by rule 6)



	.	reduce by rule 6


state 5:

	exp : functionCall .  (reduce by rule 8)



	.	reduce by rule 8


state 6:

	exp : arrayCreation .  (reduce by rule 17)



	.	reduce by rule 17


state 7:

	exp : assignment .  (reduce by rule 9)



	.	reduce by rule 9


state 8:

	exp : lvalue .  (reduce by rule 4)
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 
	assignment : lvalue . ASSIGN exp 

	LBRACK	shift 26
	DOT	shift 25
	ASSIGN	shift 24


	.	reduce by rule 4


state 9:

	exp : arithmeticExp .  (reduce by rule 5)



	.	reduce by rule 5


state 10:

	program : exp .  (reduce by rule 0)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 0


state 11:

	exp : NIL .  (reduce by rule 3)



	.	reduce by rule 3


state 12:

	exp : BREAK .  (reduce by rule 14)



	.	reduce by rule 14


state 13:

	exp : LET . decs IN expseq END 

	FUNCTION	shift 46
	VAR	shift 45
	TYPE	shift 44

	fundec	goto 43
	vardec	goto 42
	tydec	goto 41
	dec	goto 40
	decs	goto 39

	.	error


state 14:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 47


	.	error


state 15:

	exp : WHILE . exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 48
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 16:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 49
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 17:

	arithmeticExp : MINUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 50
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 18:

	exp : LPAREN . expseq RPAREN 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 52
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	expseq	goto 51
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 19:

	exp : STRING .  (reduce by rule 2)



	.	reduce by rule 2


state 20:

	exp : INT .  (reduce by rule 1)



	.	reduce by rule 1

error:  state 21: shift/reduce conflict (shift LBRACK, reduce by rule 19)

state 21:

	lvalue : ID . LBRACK exp RBRACK 
	lvalue : ID . DOT ID 
	functionCall : ID . LPAREN RPAREN 
	functionCall : ID . LPAREN funargs RPAREN 
	typeID : ID .  (reduce by rule 19)

	LPAREN	shift 55
	LBRACK	shift 54
	DOT	shift 53


	.	reduce by rule 19


state 22:

	recordCreation : typeID LBRACE . recflds RBRACE 

	ID	shift 57

	recflds	goto 56

	.	error


state 23:

	arrayCreation : typeID LBRACK . exp RBRACK OF exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 58
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 24:

	assignment : lvalue ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 59
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 25:

	lvalue : lvalue DOT . ID 

	ID	shift 60


	.	error


state 26:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 61
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 27:

	booleanExp : exp OR . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 62
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 28:

	booleanExp : exp AND . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 63
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 29:

	comparison : exp GE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 64
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 30:

	comparison : exp GT . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 65
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 31:

	comparison : exp LE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 66
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 32:

	comparison : exp LT . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 67
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 33:

	comparison : exp NEQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 68
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 34:

	comparison : exp EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 69
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 35:

	arithmeticExp : exp DIVIDE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 70
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 36:

	arithmeticExp : exp TIMES . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 71
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 37:

	arithmeticExp : exp MINUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 72
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 38:

	arithmeticExp : exp PLUS . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 73
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 39:

	exp : LET decs . IN expseq END 
	decs : decs . dec 

	IN	shift 75
	FUNCTION	shift 46
	VAR	shift 45
	TYPE	shift 44

	fundec	goto 43
	vardec	goto 42
	tydec	goto 41
	dec	goto 74

	.	error


state 40:

	decs : dec .  (reduce by rule 27)



	.	reduce by rule 27


state 41:

	dec : tydec .  (reduce by rule 31)



	.	reduce by rule 31


state 42:

	dec : vardec .  (reduce by rule 32)



	.	reduce by rule 32


state 43:

	dec : fundec .  (reduce by rule 33)



	.	reduce by rule 33


state 44:

	tydec : TYPE . typeID EQ ty 

	ID	shift 77

	typeID	goto 76

	.	error


state 45:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON typeID ASSIGN exp 

	ID	shift 78


	.	error


state 46:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON typeID EQ exp 

	ID	shift 79


	.	error


state 47:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 80


	.	error


state 48:

	exp : WHILE exp . DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 81


	.	error


state 49:

	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	THEN	shift 82


	.	error


state 50:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arithmeticExp : MINUS exp .  (reduce by rule 63)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 63


state 51:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 83


	.	error


state 52:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	expseq : exp . SEMICOLON expseq 
	expseq : exp .  (reduce by rule 30)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	SEMICOLON	shift 84
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 30


state 53:

	lvalue : ID DOT . ID 

	ID	shift 85


	.	error


state 54:

	lvalue : ID LBRACK . exp RBRACK 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 86
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 55:

	functionCall : ID LPAREN . RPAREN 
	functionCall : ID LPAREN . funargs RPAREN 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	RPAREN	shift 89
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 88
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	funargs	goto 87
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 56:

	recordCreation : typeID LBRACE recflds . RBRACE 

	RBRACE	shift 90


	.	error


state 57:

	recflds : ID . EQ exp 
	recflds : ID . EQ exp COLON recflds 

	EQ	shift 91


	.	error


state 58:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arrayCreation : typeID LBRACK exp . RBRACK OF exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	RBRACK	shift 92
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 59:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	assignment : lvalue ASSIGN exp .  (reduce by rule 46)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 46


state 60:

	lvalue : lvalue DOT ID .  (reduce by rule 50)



	.	reduce by rule 50


state 61:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	lvalue : lvalue LBRACK exp . RBRACK 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	RBRACK	shift 93
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 62:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	booleanExp : exp OR exp .  (reduce by rule 58)
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28


	.	reduce by rule 58


state 63:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp AND exp .  (reduce by rule 57)
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29


	.	reduce by rule 57


state 64:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp GE exp .  (reduce by rule 55)
	comparison : exp . LE exp 

	EOF	reduce by rule 55
	COMMA	reduce by rule 55
	COLON	reduce by rule 55
	SEMICOLON	reduce by rule 55
	RPAREN	reduce by rule 55
	RBRACK	reduce by rule 55
	RBRACE	reduce by rule 55
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 55
	OR	reduce by rule 55
	THEN	reduce by rule 55
	ELSE	reduce by rule 55
	TO	reduce by rule 55
	DO	reduce by rule 55
	IN	reduce by rule 55
	END	reduce by rule 55
	FUNCTION	reduce by rule 55
	VAR	reduce by rule 55
	TYPE	reduce by rule 55


	.	error


state 65:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp GT exp .  (reduce by rule 53)
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 53
	COMMA	reduce by rule 53
	COLON	reduce by rule 53
	SEMICOLON	reduce by rule 53
	RPAREN	reduce by rule 53
	RBRACK	reduce by rule 53
	RBRACE	reduce by rule 53
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 53
	OR	reduce by rule 53
	THEN	reduce by rule 53
	ELSE	reduce by rule 53
	TO	reduce by rule 53
	DO	reduce by rule 53
	IN	reduce by rule 53
	END	reduce by rule 53
	FUNCTION	reduce by rule 53
	VAR	reduce by rule 53
	TYPE	reduce by rule 53


	.	error


state 66:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 
	comparison : exp LE exp .  (reduce by rule 56)

	EOF	reduce by rule 56
	COMMA	reduce by rule 56
	COLON	reduce by rule 56
	SEMICOLON	reduce by rule 56
	RPAREN	reduce by rule 56
	RBRACK	reduce by rule 56
	RBRACE	reduce by rule 56
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 56
	OR	reduce by rule 56
	THEN	reduce by rule 56
	ELSE	reduce by rule 56
	TO	reduce by rule 56
	DO	reduce by rule 56
	IN	reduce by rule 56
	END	reduce by rule 56
	FUNCTION	reduce by rule 56
	VAR	reduce by rule 56
	TYPE	reduce by rule 56


	.	error


state 67:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp LT exp .  (reduce by rule 54)
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 54
	COMMA	reduce by rule 54
	COLON	reduce by rule 54
	SEMICOLON	reduce by rule 54
	RPAREN	reduce by rule 54
	RBRACK	reduce by rule 54
	RBRACE	reduce by rule 54
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 54
	OR	reduce by rule 54
	THEN	reduce by rule 54
	ELSE	reduce by rule 54
	TO	reduce by rule 54
	DO	reduce by rule 54
	IN	reduce by rule 54
	END	reduce by rule 54
	FUNCTION	reduce by rule 54
	VAR	reduce by rule 54
	TYPE	reduce by rule 54


	.	error


state 68:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp NEQ exp .  (reduce by rule 52)
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 52
	COMMA	reduce by rule 52
	COLON	reduce by rule 52
	SEMICOLON	reduce by rule 52
	RPAREN	reduce by rule 52
	RBRACK	reduce by rule 52
	RBRACE	reduce by rule 52
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 52
	OR	reduce by rule 52
	THEN	reduce by rule 52
	ELSE	reduce by rule 52
	TO	reduce by rule 52
	DO	reduce by rule 52
	IN	reduce by rule 52
	END	reduce by rule 52
	FUNCTION	reduce by rule 52
	VAR	reduce by rule 52
	TYPE	reduce by rule 52


	.	error


state 69:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp EQ exp .  (reduce by rule 51)
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	EOF	reduce by rule 51
	COMMA	reduce by rule 51
	COLON	reduce by rule 51
	SEMICOLON	reduce by rule 51
	RPAREN	reduce by rule 51
	RBRACK	reduce by rule 51
	RBRACE	reduce by rule 51
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	AND	reduce by rule 51
	OR	reduce by rule 51
	THEN	reduce by rule 51
	ELSE	reduce by rule 51
	TO	reduce by rule 51
	DO	reduce by rule 51
	IN	reduce by rule 51
	END	reduce by rule 51
	FUNCTION	reduce by rule 51
	VAR	reduce by rule 51
	TYPE	reduce by rule 51


	.	error


state 70:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arithmeticExp : exp DIVIDE exp .  (reduce by rule 62)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 62


state 71:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp TIMES exp .  (reduce by rule 61)
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 



	.	reduce by rule 61


state 72:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp MINUS exp .  (reduce by rule 60)
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 60


state 73:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp PLUS exp .  (reduce by rule 59)
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	TIMES	shift 36
	DIVIDE	shift 35


	.	reduce by rule 59


state 74:

	decs : decs dec .  (reduce by rule 28)



	.	reduce by rule 28


state 75:

	exp : LET decs IN . expseq END 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 52
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	expseq	goto 94
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 76:

	tydec : TYPE typeID . EQ ty 

	EQ	shift 95


	.	error


state 77:

	typeID : ID .  (reduce by rule 19)



	.	reduce by rule 19


state 78:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON typeID ASSIGN exp 

	COLON	shift 97
	ASSIGN	shift 96


	.	error


state 79:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON typeID EQ exp 

	LPAREN	shift 98


	.	error


state 80:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 99
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 81:

	exp : WHILE exp DO . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 100
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 82:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 101
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 83:

	exp : LPAREN expseq RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 84:

	expseq : exp SEMICOLON . expseq 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 52
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	expseq	goto 102
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 85:

	lvalue : ID DOT ID .  (reduce by rule 49)



	.	reduce by rule 49


state 86:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	lvalue : ID LBRACK exp . RBRACK 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	RBRACK	shift 103
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	error


state 87:

	functionCall : ID LPAREN funargs . RPAREN 

	RPAREN	shift 104


	.	error


state 88:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	funargs : exp .  (reduce by rule 25)
	funargs : exp . COMMA funargs 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	COMMA	shift 105
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 25


state 89:

	functionCall : ID LPAREN RPAREN .  (reduce by rule 23)



	.	reduce by rule 23


state 90:

	recordCreation : typeID LBRACE recflds RBRACE .  (reduce by rule 20)



	.	reduce by rule 20


state 91:

	recflds : ID EQ . exp 
	recflds : ID EQ . exp COLON recflds 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 106
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 92:

	arrayCreation : typeID LBRACK exp RBRACK . OF exp 

	OF	shift 107


	.	error


state 93:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 48)



	.	reduce by rule 48


state 94:

	exp : LET decs IN expseq . END 

	END	shift 108


	.	error


state 95:

	tydec : TYPE typeID EQ . ty 

	ID	shift 77
	LBRACE	shift 112
	ARRAY	shift 111

	ty	goto 110
	typeID	goto 109

	.	error


state 96:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 113
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 97:

	vardec : VAR ID COLON . typeID ASSIGN exp 

	ID	shift 77

	typeID	goto 114

	.	error


state 98:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON typeID EQ exp 

	ID	shift 116

	tyfields	goto 115

	.	error


state 99:

	exp : FOR ID ASSIGN exp . TO exp DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	TO	shift 117


	.	error


state 100:

	exp : WHILE exp DO exp .  (reduce by rule 12)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 12


state 101:

	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 11)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	ELSE	shift 118


	.	reduce by rule 11


state 102:

	expseq : exp SEMICOLON expseq .  (reduce by rule 29)



	.	reduce by rule 29


state 103:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 47)



	.	reduce by rule 47


state 104:

	functionCall : ID LPAREN funargs RPAREN .  (reduce by rule 24)



	.	reduce by rule 24


state 105:

	funargs : exp COMMA . funargs 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 88
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	funargs	goto 119
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 106:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	recflds : ID EQ exp .  (reduce by rule 21)
	recflds : ID EQ exp . COLON recflds 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	COLON	shift 120
	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 21


state 107:

	arrayCreation : typeID LBRACK exp RBRACK OF . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 121
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 108:

	exp : LET decs IN expseq END .  (reduce by rule 15)



	.	reduce by rule 15


state 109:

	ty : typeID .  (reduce by rule 35)



	.	reduce by rule 35


state 110:

	tydec : TYPE typeID EQ ty .  (reduce by rule 34)



	.	reduce by rule 34


state 111:

	ty : ARRAY . OF typeID 

	OF	shift 122


	.	error


state 112:

	ty : LBRACE . tyfields RBRACE 
	ty : LBRACE . RBRACE 

	ID	shift 116
	RBRACE	shift 124

	tyfields	goto 123

	.	error


state 113:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 41)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 41


state 114:

	vardec : VAR ID COLON typeID . ASSIGN exp 

	ASSIGN	shift 125


	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON typeID EQ exp 

	RPAREN	shift 126


	.	error


state 116:

	tyfields : ID . COLON typeID 
	tyfields : ID . COLON typeID COMMA tyfields 

	COLON	shift 127


	.	error


state 117:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 128
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 118:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 129
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 119:

	funargs : exp COMMA funargs .  (reduce by rule 26)



	.	reduce by rule 26


state 120:

	recflds : ID EQ exp COLON . recflds 

	ID	shift 57

	recflds	goto 130

	.	error


state 121:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	arrayCreation : typeID LBRACK exp RBRACK OF exp .  (reduce by rule 45)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 45


state 122:

	ty : ARRAY OF . typeID 

	ID	shift 77

	typeID	goto 131

	.	error


state 123:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 132


	.	error


state 124:

	ty : LBRACE RBRACE .  (reduce by rule 37)



	.	reduce by rule 37


state 125:

	vardec : VAR ID COLON typeID ASSIGN . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 133
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 126:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON typeID EQ exp 

	COLON	shift 135
	EQ	shift 134


	.	error


state 127:

	tyfields : ID COLON . typeID 
	tyfields : ID COLON . typeID COMMA tyfields 

	ID	shift 77

	typeID	goto 136

	.	error


state 128:

	exp : FOR ID ASSIGN exp TO exp . DO exp 
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27
	DO	shift 137


	.	error


state 129:

	exp : IF exp THEN exp ELSE exp .  (reduce by rule 10)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 10


state 130:

	recflds : ID EQ exp COLON recflds .  (reduce by rule 22)



	.	reduce by rule 22


state 131:

	ty : ARRAY OF typeID .  (reduce by rule 38)



	.	reduce by rule 38


state 132:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 36)



	.	reduce by rule 36


state 133:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	vardec : VAR ID COLON typeID ASSIGN exp .  (reduce by rule 42)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 42


state 134:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 138
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 135:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . typeID EQ exp 

	ID	shift 77

	typeID	goto 139

	.	error


state 136:

	tyfields : ID COLON typeID .  (reduce by rule 39)
	tyfields : ID COLON typeID . COMMA tyfields 

	COMMA	shift 140


	.	reduce by rule 39


state 137:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 141
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 138:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 43)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 43


state 139:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON typeID . EQ exp 

	EQ	shift 142


	.	error


state 140:

	tyfields : ID COLON typeID COMMA . tyfields 

	ID	shift 116

	tyfields	goto 143

	.	error


state 141:

	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 13)
	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 13


state 142:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON typeID EQ . exp 

	ID	shift 21
	INT	shift 20
	STRING	shift 19
	LPAREN	shift 18
	MINUS	shift 17
	IF	shift 16
	WHILE	shift 15
	FOR	shift 14
	LET	shift 13
	BREAK	shift 12
	NIL	shift 11

	exp	goto 144
	arithmeticExp	goto 9
	lvalue	goto 8
	assignment	goto 7
	arrayCreation	goto 6
	functionCall	goto 5
	booleanExp	goto 4
	recordCreation	goto 3
	comparison	goto 2
	typeID	goto 1

	.	error


state 143:

	tyfields : ID COLON typeID COMMA tyfields .  (reduce by rule 40)



	.	reduce by rule 40


state 144:

	arithmeticExp : exp . PLUS exp 
	arithmeticExp : exp . MINUS exp 
	arithmeticExp : exp . TIMES exp 
	arithmeticExp : exp . DIVIDE exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON typeID EQ exp .  (reduce by rule 44)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	comparison : exp . EQ exp 
	comparison : exp . NEQ exp 
	comparison : exp . GT exp 
	comparison : exp . LT exp 
	comparison : exp . GE exp 
	comparison : exp . LE exp 

	PLUS	shift 38
	MINUS	shift 37
	TIMES	shift 36
	DIVIDE	shift 35
	EQ	shift 34
	NEQ	shift 33
	LT	shift 32
	LE	shift 31
	GT	shift 30
	GE	shift 29
	AND	shift 28
	OR	shift 27


	.	reduce by rule 44


state 145:


	EOF	accept


	.	error

492 of 1029 action table entries left after compaction
397 goto table entries
